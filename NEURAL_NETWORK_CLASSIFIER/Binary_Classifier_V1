{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Binary Classifier v5","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyP3HvTJiM8JInfSGc3r80Ux"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Binary Classifier v5, last updated August 11, 2022.\n"],"metadata":{"id":"D4gMQ0sB5_9M"}},{"cell_type":"code","source":["#Step1: displaying data\n","import numpy as np\n","import pandas as pd\n","import os\n","import torch\n","import matplotlib.pyplot as plt\n","import torch.nn.functional as F\n","import torch.nn as nn\n","from torch.utils.data import Dataset, DataLoader\n","from torch.utils.data import random_split\n","\n","dataset_path = \"cumulative_2022_140.csv\";\n","dfc = pd.read_csv(dataset_path, skiprows = 144)\n","dfc.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"FuTCGxXv6Lw2","executionInfo":{"status":"ok","timestamp":1661517399199,"user_tz":240,"elapsed":496,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}},"outputId":"ed3018f9-ba8a-477e-cbba-35a02c8c4144"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      kepid kepoi_name   kepler_name koi_disposition koi_vet_stat  \\\n","0  10797460  K00752.01  Kepler-227 b       CONFIRMED         Done   \n","1  10797460  K00752.02  Kepler-227 c       CONFIRMED         Done   \n","2  10811496  K00753.01           NaN       CANDIDATE         Done   \n","3  10848459  K00754.01           NaN  FALSE POSITIVE         Done   \n","4  10854555  K00755.01  Kepler-664 b       CONFIRMED         Done   \n","\n","  koi_vet_date koi_pdisposition  koi_score  koi_fpflag_nt  koi_fpflag_ss  ...  \\\n","0   2018-08-16        CANDIDATE      1.000              0              0  ...   \n","1   2018-08-16        CANDIDATE      0.969              0              0  ...   \n","2   2018-08-16        CANDIDATE      0.000              0              0  ...   \n","3   2018-08-16   FALSE POSITIVE      0.000              0              1  ...   \n","4   2018-08-16        CANDIDATE      1.000              0              0  ...   \n","\n","   koi_dicco_mdec  koi_dicco_mdec_err koi_dicco_msky koi_dicco_msky_err  \\\n","0           0.200               0.160          0.200              0.170   \n","1           0.000               0.480          0.390              0.360   \n","2          -0.034               0.070          0.042              0.072   \n","3           0.147               0.078          0.289              0.079   \n","4          -0.090               0.180          0.100              0.140   \n","\n","   koi_dikco_mra  koi_dikco_mra_err  koi_dikco_mdec  koi_dikco_mdec_err  \\\n","0          0.080              0.130           0.310               0.170   \n","1          0.490              0.340           0.120               0.730   \n","2          0.002              0.071          -0.027               0.074   \n","3         -0.257              0.072           0.099               0.077   \n","4          0.070              0.180           0.020               0.160   \n","\n","   koi_dikco_msky  koi_dikco_msky_err  \n","0           0.320               0.160  \n","1           0.500               0.450  \n","2           0.027               0.074  \n","3           0.276               0.076  \n","4           0.070               0.200  \n","\n","[5 rows x 140 columns]"],"text/html":["\n","  <div id=\"df-88489d56-0129-48d7-aa17-2c9f7e0bb669\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>kepid</th>\n","      <th>kepoi_name</th>\n","      <th>kepler_name</th>\n","      <th>koi_disposition</th>\n","      <th>koi_vet_stat</th>\n","      <th>koi_vet_date</th>\n","      <th>koi_pdisposition</th>\n","      <th>koi_score</th>\n","      <th>koi_fpflag_nt</th>\n","      <th>koi_fpflag_ss</th>\n","      <th>...</th>\n","      <th>koi_dicco_mdec</th>\n","      <th>koi_dicco_mdec_err</th>\n","      <th>koi_dicco_msky</th>\n","      <th>koi_dicco_msky_err</th>\n","      <th>koi_dikco_mra</th>\n","      <th>koi_dikco_mra_err</th>\n","      <th>koi_dikco_mdec</th>\n","      <th>koi_dikco_mdec_err</th>\n","      <th>koi_dikco_msky</th>\n","      <th>koi_dikco_msky_err</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10797460</td>\n","      <td>K00752.01</td>\n","      <td>Kepler-227 b</td>\n","      <td>CONFIRMED</td>\n","      <td>Done</td>\n","      <td>2018-08-16</td>\n","      <td>CANDIDATE</td>\n","      <td>1.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.200</td>\n","      <td>0.160</td>\n","      <td>0.200</td>\n","      <td>0.170</td>\n","      <td>0.080</td>\n","      <td>0.130</td>\n","      <td>0.310</td>\n","      <td>0.170</td>\n","      <td>0.320</td>\n","      <td>0.160</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10797460</td>\n","      <td>K00752.02</td>\n","      <td>Kepler-227 c</td>\n","      <td>CONFIRMED</td>\n","      <td>Done</td>\n","      <td>2018-08-16</td>\n","      <td>CANDIDATE</td>\n","      <td>0.969</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.000</td>\n","      <td>0.480</td>\n","      <td>0.390</td>\n","      <td>0.360</td>\n","      <td>0.490</td>\n","      <td>0.340</td>\n","      <td>0.120</td>\n","      <td>0.730</td>\n","      <td>0.500</td>\n","      <td>0.450</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10811496</td>\n","      <td>K00753.01</td>\n","      <td>NaN</td>\n","      <td>CANDIDATE</td>\n","      <td>Done</td>\n","      <td>2018-08-16</td>\n","      <td>CANDIDATE</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>-0.034</td>\n","      <td>0.070</td>\n","      <td>0.042</td>\n","      <td>0.072</td>\n","      <td>0.002</td>\n","      <td>0.071</td>\n","      <td>-0.027</td>\n","      <td>0.074</td>\n","      <td>0.027</td>\n","      <td>0.074</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10848459</td>\n","      <td>K00754.01</td>\n","      <td>NaN</td>\n","      <td>FALSE POSITIVE</td>\n","      <td>Done</td>\n","      <td>2018-08-16</td>\n","      <td>FALSE POSITIVE</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0.147</td>\n","      <td>0.078</td>\n","      <td>0.289</td>\n","      <td>0.079</td>\n","      <td>-0.257</td>\n","      <td>0.072</td>\n","      <td>0.099</td>\n","      <td>0.077</td>\n","      <td>0.276</td>\n","      <td>0.076</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10854555</td>\n","      <td>K00755.01</td>\n","      <td>Kepler-664 b</td>\n","      <td>CONFIRMED</td>\n","      <td>Done</td>\n","      <td>2018-08-16</td>\n","      <td>CANDIDATE</td>\n","      <td>1.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>-0.090</td>\n","      <td>0.180</td>\n","      <td>0.100</td>\n","      <td>0.140</td>\n","      <td>0.070</td>\n","      <td>0.180</td>\n","      <td>0.020</td>\n","      <td>0.160</td>\n","      <td>0.070</td>\n","      <td>0.200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 140 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-88489d56-0129-48d7-aa17-2c9f7e0bb669')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-88489d56-0129-48d7-aa17-2c9f7e0bb669 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-88489d56-0129-48d7-aa17-2c9f7e0bb669');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["dfc['koi_disposition'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EgpnljhO7WDy","executionInfo":{"status":"ok","timestamp":1661517399201,"user_tz":240,"elapsed":46,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}},"outputId":"6f9b2af2-7d69-4153-a744-b3f8dc608de7"},"execution_count":59,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['CONFIRMED', 'CANDIDATE', 'FALSE POSITIVE'], dtype=object)"]},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["dfc['koi_pdisposition'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jtt5pqiW7WX4","executionInfo":{"status":"ok","timestamp":1661517399202,"user_tz":240,"elapsed":43,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}},"outputId":"b86a0e73-5390-463c-a984-bb1fd54d24ca"},"execution_count":60,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['CANDIDATE', 'FALSE POSITIVE'], dtype=object)"]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["(dfc['koi_disposition'] == \"CANDIDATE\").value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SJ5rGuN57Wfr","executionInfo":{"status":"ok","timestamp":1661517399203,"user_tz":240,"elapsed":40,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}},"outputId":"5c43dc84-55f0-4d7c-a38c-df90a8c13cb1"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False    7507\n","True     2057\n","Name: koi_disposition, dtype: int64"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["dfc.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qNaSxwxj7WjL","executionInfo":{"status":"ok","timestamp":1661517399203,"user_tz":240,"elapsed":38,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}},"outputId":"5969cdfe-7d96-41b2-a634-8c7584611df4"},"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 9564 entries, 0 to 9563\n","Columns: 140 entries, kepid to koi_dikco_msky_err\n","dtypes: float64(117), int64(6), object(17)\n","memory usage: 10.2+ MB\n"]}]},{"cell_type":"code","source":["# Step2: prepping data for multiclassification\n","\n","df_multi = dfc.copy()\n","\n","koi_disposition_labels = {\n","    \"koi_disposition\": {\n","        \"CONFIRMED\": 1,\n","        \"FALSE POSITIVE\": 0,\n","        \"CANDIDATE\": 2,\n","        \"NOT DISPOSITIONED\": 3\n","    },\n","    \"koi_pdisposition\": {\n","        \"CONFIRMED\": 1,\n","        \"FALSE POSITIVE\": 0,\n","        \"CANDIDATE\": 2,\n","        \"NOT DISPOSITIONED\": 3\n","    }\n","}\n","\n","df_multi.replace(koi_disposition_labels, inplace=True)\n","df_multi"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"ZYoyOlqM7Wmf","executionInfo":{"status":"ok","timestamp":1661517399847,"user_tz":240,"elapsed":679,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}},"outputId":"6cd82b6e-e208-4941-df16-5ca0d28d1ffb"},"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         kepid kepoi_name   kepler_name  koi_disposition koi_vet_stat  \\\n","0     10797460  K00752.01  Kepler-227 b                1         Done   \n","1     10797460  K00752.02  Kepler-227 c                1         Done   \n","2     10811496  K00753.01           NaN                2         Done   \n","3     10848459  K00754.01           NaN                0         Done   \n","4     10854555  K00755.01  Kepler-664 b                1         Done   \n","...        ...        ...           ...              ...          ...   \n","9559  10090151  K07985.01           NaN                0         Done   \n","9560  10128825  K07986.01           NaN                2         Done   \n","9561  10147276  K07987.01           NaN                0         Done   \n","9562  10155286  K07988.01           NaN                2         Done   \n","9563  10156110  K07989.01           NaN                0         Done   \n","\n","     koi_vet_date  koi_pdisposition  koi_score  koi_fpflag_nt  koi_fpflag_ss  \\\n","0      2018-08-16                 2      1.000              0              0   \n","1      2018-08-16                 2      0.969              0              0   \n","2      2018-08-16                 2      0.000              0              0   \n","3      2018-08-16                 0      0.000              0              1   \n","4      2018-08-16                 2      1.000              0              0   \n","...           ...               ...        ...            ...            ...   \n","9559   2018-08-16                 0      0.000              0              1   \n","9560   2018-08-16                 2      0.497              0              0   \n","9561   2018-08-16                 0      0.021              0              0   \n","9562   2018-08-16                 2      0.092              0              0   \n","9563   2018-08-16                 0      0.000              0              0   \n","\n","      ...  koi_dicco_mdec  koi_dicco_mdec_err koi_dicco_msky  \\\n","0     ...           0.200               0.160          0.200   \n","1     ...           0.000               0.480          0.390   \n","2     ...          -0.034               0.070          0.042   \n","3     ...           0.147               0.078          0.289   \n","4     ...          -0.090               0.180          0.100   \n","...   ...             ...                 ...            ...   \n","9559  ...          -1.757               0.068          2.763   \n","9560  ...          -0.250               0.490          0.780   \n","9561  ...          -3.650               0.260          5.000   \n","9562  ...           1.320               0.670          1.690   \n","9563  ...           3.300               1.100          3.400   \n","\n","     koi_dicco_msky_err  koi_dikco_mra  koi_dikco_mra_err  koi_dikco_mdec  \\\n","0                 0.170          0.080              0.130           0.310   \n","1                 0.360          0.490              0.340           0.120   \n","2                 0.072          0.002              0.071          -0.027   \n","3                 0.079         -0.257              0.072           0.099   \n","4                 0.140          0.070              0.180           0.020   \n","...                 ...            ...                ...             ...   \n","9559              0.074          2.344              0.072          -1.756   \n","9560              0.460          0.500              0.400          -0.180   \n","9561              0.220          3.380              0.160          -3.890   \n","9562              0.530          1.450              0.110           1.370   \n","9563              1.100          0.960              0.670           3.400   \n","\n","      koi_dikco_mdec_err  koi_dikco_msky  koi_dikco_msky_err  \n","0                  0.170           0.320               0.160  \n","1                  0.730           0.500               0.450  \n","2                  0.074           0.027               0.074  \n","3                  0.077           0.276               0.076  \n","4                  0.160           0.070               0.200  \n","...                  ...             ...                 ...  \n","9559               0.068           2.929               0.072  \n","9560               0.470           0.530               0.470  \n","9561               0.260           5.160               0.220  \n","9562               0.660           2.000               0.460  \n","9563               1.100           3.500               1.100  \n","\n","[9564 rows x 140 columns]"],"text/html":["\n","  <div id=\"df-539b84fd-ea23-4e03-a5cb-48714bd9df66\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>kepid</th>\n","      <th>kepoi_name</th>\n","      <th>kepler_name</th>\n","      <th>koi_disposition</th>\n","      <th>koi_vet_stat</th>\n","      <th>koi_vet_date</th>\n","      <th>koi_pdisposition</th>\n","      <th>koi_score</th>\n","      <th>koi_fpflag_nt</th>\n","      <th>koi_fpflag_ss</th>\n","      <th>...</th>\n","      <th>koi_dicco_mdec</th>\n","      <th>koi_dicco_mdec_err</th>\n","      <th>koi_dicco_msky</th>\n","      <th>koi_dicco_msky_err</th>\n","      <th>koi_dikco_mra</th>\n","      <th>koi_dikco_mra_err</th>\n","      <th>koi_dikco_mdec</th>\n","      <th>koi_dikco_mdec_err</th>\n","      <th>koi_dikco_msky</th>\n","      <th>koi_dikco_msky_err</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10797460</td>\n","      <td>K00752.01</td>\n","      <td>Kepler-227 b</td>\n","      <td>1</td>\n","      <td>Done</td>\n","      <td>2018-08-16</td>\n","      <td>2</td>\n","      <td>1.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.200</td>\n","      <td>0.160</td>\n","      <td>0.200</td>\n","      <td>0.170</td>\n","      <td>0.080</td>\n","      <td>0.130</td>\n","      <td>0.310</td>\n","      <td>0.170</td>\n","      <td>0.320</td>\n","      <td>0.160</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10797460</td>\n","      <td>K00752.02</td>\n","      <td>Kepler-227 c</td>\n","      <td>1</td>\n","      <td>Done</td>\n","      <td>2018-08-16</td>\n","      <td>2</td>\n","      <td>0.969</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.000</td>\n","      <td>0.480</td>\n","      <td>0.390</td>\n","      <td>0.360</td>\n","      <td>0.490</td>\n","      <td>0.340</td>\n","      <td>0.120</td>\n","      <td>0.730</td>\n","      <td>0.500</td>\n","      <td>0.450</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10811496</td>\n","      <td>K00753.01</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>Done</td>\n","      <td>2018-08-16</td>\n","      <td>2</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>-0.034</td>\n","      <td>0.070</td>\n","      <td>0.042</td>\n","      <td>0.072</td>\n","      <td>0.002</td>\n","      <td>0.071</td>\n","      <td>-0.027</td>\n","      <td>0.074</td>\n","      <td>0.027</td>\n","      <td>0.074</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10848459</td>\n","      <td>K00754.01</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>Done</td>\n","      <td>2018-08-16</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0.147</td>\n","      <td>0.078</td>\n","      <td>0.289</td>\n","      <td>0.079</td>\n","      <td>-0.257</td>\n","      <td>0.072</td>\n","      <td>0.099</td>\n","      <td>0.077</td>\n","      <td>0.276</td>\n","      <td>0.076</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10854555</td>\n","      <td>K00755.01</td>\n","      <td>Kepler-664 b</td>\n","      <td>1</td>\n","      <td>Done</td>\n","      <td>2018-08-16</td>\n","      <td>2</td>\n","      <td>1.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>-0.090</td>\n","      <td>0.180</td>\n","      <td>0.100</td>\n","      <td>0.140</td>\n","      <td>0.070</td>\n","      <td>0.180</td>\n","      <td>0.020</td>\n","      <td>0.160</td>\n","      <td>0.070</td>\n","      <td>0.200</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9559</th>\n","      <td>10090151</td>\n","      <td>K07985.01</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>Done</td>\n","      <td>2018-08-16</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>-1.757</td>\n","      <td>0.068</td>\n","      <td>2.763</td>\n","      <td>0.074</td>\n","      <td>2.344</td>\n","      <td>0.072</td>\n","      <td>-1.756</td>\n","      <td>0.068</td>\n","      <td>2.929</td>\n","      <td>0.072</td>\n","    </tr>\n","    <tr>\n","      <th>9560</th>\n","      <td>10128825</td>\n","      <td>K07986.01</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>Done</td>\n","      <td>2018-08-16</td>\n","      <td>2</td>\n","      <td>0.497</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>-0.250</td>\n","      <td>0.490</td>\n","      <td>0.780</td>\n","      <td>0.460</td>\n","      <td>0.500</td>\n","      <td>0.400</td>\n","      <td>-0.180</td>\n","      <td>0.470</td>\n","      <td>0.530</td>\n","      <td>0.470</td>\n","    </tr>\n","    <tr>\n","      <th>9561</th>\n","      <td>10147276</td>\n","      <td>K07987.01</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>Done</td>\n","      <td>2018-08-16</td>\n","      <td>0</td>\n","      <td>0.021</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>-3.650</td>\n","      <td>0.260</td>\n","      <td>5.000</td>\n","      <td>0.220</td>\n","      <td>3.380</td>\n","      <td>0.160</td>\n","      <td>-3.890</td>\n","      <td>0.260</td>\n","      <td>5.160</td>\n","      <td>0.220</td>\n","    </tr>\n","    <tr>\n","      <th>9562</th>\n","      <td>10155286</td>\n","      <td>K07988.01</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>Done</td>\n","      <td>2018-08-16</td>\n","      <td>2</td>\n","      <td>0.092</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.320</td>\n","      <td>0.670</td>\n","      <td>1.690</td>\n","      <td>0.530</td>\n","      <td>1.450</td>\n","      <td>0.110</td>\n","      <td>1.370</td>\n","      <td>0.660</td>\n","      <td>2.000</td>\n","      <td>0.460</td>\n","    </tr>\n","    <tr>\n","      <th>9563</th>\n","      <td>10156110</td>\n","      <td>K07989.01</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>Done</td>\n","      <td>2018-08-16</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>3.300</td>\n","      <td>1.100</td>\n","      <td>3.400</td>\n","      <td>1.100</td>\n","      <td>0.960</td>\n","      <td>0.670</td>\n","      <td>3.400</td>\n","      <td>1.100</td>\n","      <td>3.500</td>\n","      <td>1.100</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>9564 rows Ã— 140 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-539b84fd-ea23-4e03-a5cb-48714bd9df66')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-539b84fd-ea23-4e03-a5cb-48714bd9df66 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-539b84fd-ea23-4e03-a5cb-48714bd9df66');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["# Step3: Making the train data\n","# first we remove all string type columns from the dataframe\n","\n","df_multi = df_multi.select_dtypes(exclude=['object']).copy()\n","df_test = df_multi.copy()\n","\n","# second, we manually remove some columns which are not needed as mentioned above. \n","# PS:'koi_teq_err1' and 'koi_teq_err2' have all null values so they too need to be removed\n","\n","cols_to_be_removed = ['kepid', 'koi_pdisposition', 'koi_score', 'koi_time0bk', 'koi_time0bk_err1', 'koi_time0bk_err2', 'koi_teq_err1', 'koi_teq_err2']\n","df_multi.drop(cols_to_be_removed, axis=1, inplace=True)\n","\n","# we drop the same labels for the test data\n","test_data_cols_to_be_removed = [col for col in cols_to_be_removed if col not in ['koi_pdisposition', 'koi_score']]\n","df_test.drop(test_data_cols_to_be_removed, axis=1, inplace=True)\n","\n","df_multi.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"e7IdiGks7Wpm","executionInfo":{"status":"ok","timestamp":1661517399848,"user_tz":240,"elapsed":50,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}},"outputId":"4eed21ec-9ed9-4dab-d19d-b222d589b1e7"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   koi_disposition  koi_fpflag_nt  koi_fpflag_ss  koi_fpflag_co  \\\n","0                1              0              0              0   \n","1                1              0              0              0   \n","2                2              0              0              0   \n","3                0              0              1              0   \n","4                1              0              0              0   \n","\n","   koi_fpflag_ec  koi_period  koi_period_err1  koi_period_err2    koi_time0  \\\n","0              0    9.488036     2.775000e-05    -2.775000e-05  2455003.539   \n","1              0   54.418383     2.479000e-04    -2.479000e-04  2454995.514   \n","2              0   19.899140     1.494000e-05    -1.494000e-05  2455008.850   \n","3              0    1.736952     2.630000e-07    -2.630000e-07  2455003.308   \n","4              0    2.525592     3.761000e-06    -3.761000e-06  2455004.596   \n","\n","   koi_time0_err1  ...  koi_dicco_mdec  koi_dicco_mdec_err  koi_dicco_msky  \\\n","0        0.002160  ...           0.200               0.160           0.200   \n","1        0.003520  ...           0.000               0.480           0.390   \n","2        0.000581  ...          -0.034               0.070           0.042   \n","3        0.000115  ...           0.147               0.078           0.289   \n","4        0.001130  ...          -0.090               0.180           0.100   \n","\n","   koi_dicco_msky_err  koi_dikco_mra  koi_dikco_mra_err  koi_dikco_mdec  \\\n","0               0.170          0.080              0.130           0.310   \n","1               0.360          0.490              0.340           0.120   \n","2               0.072          0.002              0.071          -0.027   \n","3               0.079         -0.257              0.072           0.099   \n","4               0.140          0.070              0.180           0.020   \n","\n","   koi_dikco_mdec_err  koi_dikco_msky  koi_dikco_msky_err  \n","0               0.170           0.320               0.160  \n","1               0.730           0.500               0.450  \n","2               0.074           0.027               0.074  \n","3               0.077           0.276               0.076  \n","4               0.160           0.070               0.200  \n","\n","[5 rows x 117 columns]"],"text/html":["\n","  <div id=\"df-29339fe3-f9c6-4eed-afb7-51b0c897c165\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>koi_disposition</th>\n","      <th>koi_fpflag_nt</th>\n","      <th>koi_fpflag_ss</th>\n","      <th>koi_fpflag_co</th>\n","      <th>koi_fpflag_ec</th>\n","      <th>koi_period</th>\n","      <th>koi_period_err1</th>\n","      <th>koi_period_err2</th>\n","      <th>koi_time0</th>\n","      <th>koi_time0_err1</th>\n","      <th>...</th>\n","      <th>koi_dicco_mdec</th>\n","      <th>koi_dicco_mdec_err</th>\n","      <th>koi_dicco_msky</th>\n","      <th>koi_dicco_msky_err</th>\n","      <th>koi_dikco_mra</th>\n","      <th>koi_dikco_mra_err</th>\n","      <th>koi_dikco_mdec</th>\n","      <th>koi_dikco_mdec_err</th>\n","      <th>koi_dikco_msky</th>\n","      <th>koi_dikco_msky_err</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>9.488036</td>\n","      <td>2.775000e-05</td>\n","      <td>-2.775000e-05</td>\n","      <td>2455003.539</td>\n","      <td>0.002160</td>\n","      <td>...</td>\n","      <td>0.200</td>\n","      <td>0.160</td>\n","      <td>0.200</td>\n","      <td>0.170</td>\n","      <td>0.080</td>\n","      <td>0.130</td>\n","      <td>0.310</td>\n","      <td>0.170</td>\n","      <td>0.320</td>\n","      <td>0.160</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>54.418383</td>\n","      <td>2.479000e-04</td>\n","      <td>-2.479000e-04</td>\n","      <td>2454995.514</td>\n","      <td>0.003520</td>\n","      <td>...</td>\n","      <td>0.000</td>\n","      <td>0.480</td>\n","      <td>0.390</td>\n","      <td>0.360</td>\n","      <td>0.490</td>\n","      <td>0.340</td>\n","      <td>0.120</td>\n","      <td>0.730</td>\n","      <td>0.500</td>\n","      <td>0.450</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>19.899140</td>\n","      <td>1.494000e-05</td>\n","      <td>-1.494000e-05</td>\n","      <td>2455008.850</td>\n","      <td>0.000581</td>\n","      <td>...</td>\n","      <td>-0.034</td>\n","      <td>0.070</td>\n","      <td>0.042</td>\n","      <td>0.072</td>\n","      <td>0.002</td>\n","      <td>0.071</td>\n","      <td>-0.027</td>\n","      <td>0.074</td>\n","      <td>0.027</td>\n","      <td>0.074</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.736952</td>\n","      <td>2.630000e-07</td>\n","      <td>-2.630000e-07</td>\n","      <td>2455003.308</td>\n","      <td>0.000115</td>\n","      <td>...</td>\n","      <td>0.147</td>\n","      <td>0.078</td>\n","      <td>0.289</td>\n","      <td>0.079</td>\n","      <td>-0.257</td>\n","      <td>0.072</td>\n","      <td>0.099</td>\n","      <td>0.077</td>\n","      <td>0.276</td>\n","      <td>0.076</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.525592</td>\n","      <td>3.761000e-06</td>\n","      <td>-3.761000e-06</td>\n","      <td>2455004.596</td>\n","      <td>0.001130</td>\n","      <td>...</td>\n","      <td>-0.090</td>\n","      <td>0.180</td>\n","      <td>0.100</td>\n","      <td>0.140</td>\n","      <td>0.070</td>\n","      <td>0.180</td>\n","      <td>0.020</td>\n","      <td>0.160</td>\n","      <td>0.070</td>\n","      <td>0.200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 117 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-29339fe3-f9c6-4eed-afb7-51b0c897c165')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-29339fe3-f9c6-4eed-afb7-51b0c897c165 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-29339fe3-f9c6-4eed-afb7-51b0c897c165');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["df_test.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"T-MVAJKD7WsE","executionInfo":{"status":"ok","timestamp":1661517399850,"user_tz":240,"elapsed":48,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}},"outputId":"237ce509-2cf5-49aa-da42-001888870488"},"execution_count":65,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   koi_disposition  koi_pdisposition  koi_score  koi_fpflag_nt  koi_fpflag_ss  \\\n","0                1                 2      1.000              0              0   \n","1                1                 2      0.969              0              0   \n","2                2                 2      0.000              0              0   \n","3                0                 0      0.000              0              1   \n","4                1                 2      1.000              0              0   \n","\n","   koi_fpflag_co  koi_fpflag_ec  koi_period  koi_period_err1  koi_period_err2  \\\n","0              0              0    9.488036     2.775000e-05    -2.775000e-05   \n","1              0              0   54.418383     2.479000e-04    -2.479000e-04   \n","2              0              0   19.899140     1.494000e-05    -1.494000e-05   \n","3              0              0    1.736952     2.630000e-07    -2.630000e-07   \n","4              0              0    2.525592     3.761000e-06    -3.761000e-06   \n","\n","   ...  koi_dicco_mdec  koi_dicco_mdec_err  koi_dicco_msky  \\\n","0  ...           0.200               0.160           0.200   \n","1  ...           0.000               0.480           0.390   \n","2  ...          -0.034               0.070           0.042   \n","3  ...           0.147               0.078           0.289   \n","4  ...          -0.090               0.180           0.100   \n","\n","   koi_dicco_msky_err  koi_dikco_mra  koi_dikco_mra_err  koi_dikco_mdec  \\\n","0               0.170          0.080              0.130           0.310   \n","1               0.360          0.490              0.340           0.120   \n","2               0.072          0.002              0.071          -0.027   \n","3               0.079         -0.257              0.072           0.099   \n","4               0.140          0.070              0.180           0.020   \n","\n","   koi_dikco_mdec_err  koi_dikco_msky  koi_dikco_msky_err  \n","0               0.170           0.320               0.160  \n","1               0.730           0.500               0.450  \n","2               0.074           0.027               0.074  \n","3               0.077           0.276               0.076  \n","4               0.160           0.070               0.200  \n","\n","[5 rows x 119 columns]"],"text/html":["\n","  <div id=\"df-6f566251-c885-4f5e-a3dd-d699619cbe90\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>koi_disposition</th>\n","      <th>koi_pdisposition</th>\n","      <th>koi_score</th>\n","      <th>koi_fpflag_nt</th>\n","      <th>koi_fpflag_ss</th>\n","      <th>koi_fpflag_co</th>\n","      <th>koi_fpflag_ec</th>\n","      <th>koi_period</th>\n","      <th>koi_period_err1</th>\n","      <th>koi_period_err2</th>\n","      <th>...</th>\n","      <th>koi_dicco_mdec</th>\n","      <th>koi_dicco_mdec_err</th>\n","      <th>koi_dicco_msky</th>\n","      <th>koi_dicco_msky_err</th>\n","      <th>koi_dikco_mra</th>\n","      <th>koi_dikco_mra_err</th>\n","      <th>koi_dikco_mdec</th>\n","      <th>koi_dikco_mdec_err</th>\n","      <th>koi_dikco_msky</th>\n","      <th>koi_dikco_msky_err</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>9.488036</td>\n","      <td>2.775000e-05</td>\n","      <td>-2.775000e-05</td>\n","      <td>...</td>\n","      <td>0.200</td>\n","      <td>0.160</td>\n","      <td>0.200</td>\n","      <td>0.170</td>\n","      <td>0.080</td>\n","      <td>0.130</td>\n","      <td>0.310</td>\n","      <td>0.170</td>\n","      <td>0.320</td>\n","      <td>0.160</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0.969</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>54.418383</td>\n","      <td>2.479000e-04</td>\n","      <td>-2.479000e-04</td>\n","      <td>...</td>\n","      <td>0.000</td>\n","      <td>0.480</td>\n","      <td>0.390</td>\n","      <td>0.360</td>\n","      <td>0.490</td>\n","      <td>0.340</td>\n","      <td>0.120</td>\n","      <td>0.730</td>\n","      <td>0.500</td>\n","      <td>0.450</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>19.899140</td>\n","      <td>1.494000e-05</td>\n","      <td>-1.494000e-05</td>\n","      <td>...</td>\n","      <td>-0.034</td>\n","      <td>0.070</td>\n","      <td>0.042</td>\n","      <td>0.072</td>\n","      <td>0.002</td>\n","      <td>0.071</td>\n","      <td>-0.027</td>\n","      <td>0.074</td>\n","      <td>0.027</td>\n","      <td>0.074</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.736952</td>\n","      <td>2.630000e-07</td>\n","      <td>-2.630000e-07</td>\n","      <td>...</td>\n","      <td>0.147</td>\n","      <td>0.078</td>\n","      <td>0.289</td>\n","      <td>0.079</td>\n","      <td>-0.257</td>\n","      <td>0.072</td>\n","      <td>0.099</td>\n","      <td>0.077</td>\n","      <td>0.276</td>\n","      <td>0.076</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.525592</td>\n","      <td>3.761000e-06</td>\n","      <td>-3.761000e-06</td>\n","      <td>...</td>\n","      <td>-0.090</td>\n","      <td>0.180</td>\n","      <td>0.100</td>\n","      <td>0.140</td>\n","      <td>0.070</td>\n","      <td>0.180</td>\n","      <td>0.020</td>\n","      <td>0.160</td>\n","      <td>0.070</td>\n","      <td>0.200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 119 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6f566251-c885-4f5e-a3dd-d699619cbe90')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6f566251-c885-4f5e-a3dd-d699619cbe90 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6f566251-c885-4f5e-a3dd-d699619cbe90');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["#Attempt 1 to deal with missing data:\n","#fill NAs with 0s\n","df_multi = df_multi.fillna(0)"],"metadata":{"id":"VESNqSP-7WxY","executionInfo":{"status":"ok","timestamp":1661517399851,"user_tz":240,"elapsed":47,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}}},"execution_count":66,"outputs":[]},{"cell_type":"code","source":["index = df_multi[df_multi.koi_fpflag_nt == df_multi.koi_fpflag_nt.max()].index\n","df_multi.drop(index, inplace=True)\n","df_multi.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hy64Be0b7Wzk","executionInfo":{"status":"ok","timestamp":1661517399853,"user_tz":240,"elapsed":48,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}},"outputId":"2996d5e9-e07b-4642-9b55-3026ac2aa916"},"execution_count":67,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 9563 entries, 0 to 9563\n","Columns: 117 entries, koi_disposition to koi_dikco_msky_err\n","dtypes: float64(111), int64(6)\n","memory usage: 8.6 MB\n"]}]},{"cell_type":"code","source":["#Step4: Making the test data\n","#only getting the dataframe with we have a confirmed label\n","df_test = df_test[df_test.koi_disposition == 2]\n","df_test.to_csv('data/koi_test.csv')\n","df_multi.to_csv('data/koi_train.csv')\n","df_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"tGUFbhlJ7W39","executionInfo":{"status":"ok","timestamp":1661517402933,"user_tz":240,"elapsed":3122,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}},"outputId":"b58e2e99-9a1d-460d-b7bb-c56bcb6297eb"},"execution_count":68,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      koi_disposition  koi_pdisposition  koi_score  koi_fpflag_nt  \\\n","2                   2                 2      0.000              0   \n","37                  2                 2      1.000              0   \n","58                  2                 2      0.999              0   \n","62                  2                 2      0.993              0   \n","63                  2                 2      0.871              0   \n","...               ...               ...        ...            ...   \n","9538                2                 2      0.843              0   \n","9542                2                 2      0.189              0   \n","9552                2                 2      0.519              0   \n","9560                2                 2      0.497              0   \n","9562                2                 2      0.092              0   \n","\n","      koi_fpflag_ss  koi_fpflag_co  koi_fpflag_ec  koi_period  \\\n","2                 0              0              0   19.899140   \n","37                0              0              0    4.959319   \n","58                0              0              0   40.419504   \n","62                0              0              0    7.240661   \n","63                0              0              0    3.435916   \n","...             ...            ...            ...         ...   \n","9538              0              0              0    7.268182   \n","9542              0              0              0  376.379890   \n","9552              0              0              0  367.947848   \n","9560              0              0              0    1.739849   \n","9562              0              0              0  333.486169   \n","\n","      koi_period_err1  koi_period_err2  ...  koi_dicco_mdec  \\\n","2        1.494000e-05    -1.494000e-05  ...          -0.034   \n","37       5.150000e-07    -5.150000e-07  ...           0.012   \n","58       1.139000e-04    -1.139000e-04  ...           0.051   \n","62       1.617000e-05    -1.617000e-05  ...          -0.490   \n","63       4.729000e-05    -4.729000e-05  ...          -0.050   \n","...               ...              ...  ...             ...   \n","9538     1.635000e-04    -1.635000e-04  ...           0.360   \n","9542     4.680000e-02    -4.680000e-02  ...          -0.500   \n","9552     4.787000e-03    -4.787000e-03  ...          -0.010   \n","9560     1.780000e-05    -1.780000e-05  ...          -0.250   \n","9562     4.235000e-03    -4.235000e-03  ...           1.320   \n","\n","      koi_dicco_mdec_err  koi_dicco_msky  koi_dicco_msky_err  koi_dikco_mra  \\\n","2                  0.070           0.042               0.072          0.002   \n","37                 0.067           0.022               0.067         -0.021   \n","58                 0.076           0.057               0.077         -0.049   \n","62                 0.640           0.710               0.540          0.080   \n","63                 0.950           0.050               0.930         -0.110   \n","...                  ...             ...                 ...            ...   \n","9538               0.380           0.900               1.000         -1.500   \n","9542               0.360           1.370               0.360          1.120   \n","9552               0.360           0.210               0.490          0.070   \n","9560               0.490           0.780               0.460          0.500   \n","9562               0.670           1.690               0.530          1.450   \n","\n","      koi_dikco_mra_err  koi_dikco_mdec  koi_dikco_mdec_err  koi_dikco_msky  \\\n","2                 0.071          -0.027               0.074           0.027   \n","37                0.067          -0.077               0.068           0.080   \n","58                0.071          -0.021               0.075           0.053   \n","62                0.450          -0.380               0.560           0.390   \n","63                0.660          -0.300               1.000           0.300   \n","...                 ...             ...                 ...             ...   \n","9538              1.000          -0.350               0.340           1.550   \n","9542              0.360          -0.770               0.360           1.360   \n","9552              0.290          -0.310               0.490           0.320   \n","9560              0.400          -0.180               0.470           0.530   \n","9562              0.110           1.370               0.660           2.000   \n","\n","      koi_dikco_msky_err  \n","2                  0.074  \n","37                 0.068  \n","58                 0.072  \n","62                 0.560  \n","63                 1.000  \n","...                  ...  \n","9538               0.920  \n","9542               0.360  \n","9552               0.480  \n","9560               0.470  \n","9562               0.460  \n","\n","[2057 rows x 119 columns]"],"text/html":["\n","  <div id=\"df-bdd7ecb6-8479-4855-9269-68ccecf29714\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>koi_disposition</th>\n","      <th>koi_pdisposition</th>\n","      <th>koi_score</th>\n","      <th>koi_fpflag_nt</th>\n","      <th>koi_fpflag_ss</th>\n","      <th>koi_fpflag_co</th>\n","      <th>koi_fpflag_ec</th>\n","      <th>koi_period</th>\n","      <th>koi_period_err1</th>\n","      <th>koi_period_err2</th>\n","      <th>...</th>\n","      <th>koi_dicco_mdec</th>\n","      <th>koi_dicco_mdec_err</th>\n","      <th>koi_dicco_msky</th>\n","      <th>koi_dicco_msky_err</th>\n","      <th>koi_dikco_mra</th>\n","      <th>koi_dikco_mra_err</th>\n","      <th>koi_dikco_mdec</th>\n","      <th>koi_dikco_mdec_err</th>\n","      <th>koi_dikco_msky</th>\n","      <th>koi_dikco_msky_err</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>19.899140</td>\n","      <td>1.494000e-05</td>\n","      <td>-1.494000e-05</td>\n","      <td>...</td>\n","      <td>-0.034</td>\n","      <td>0.070</td>\n","      <td>0.042</td>\n","      <td>0.072</td>\n","      <td>0.002</td>\n","      <td>0.071</td>\n","      <td>-0.027</td>\n","      <td>0.074</td>\n","      <td>0.027</td>\n","      <td>0.074</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4.959319</td>\n","      <td>5.150000e-07</td>\n","      <td>-5.150000e-07</td>\n","      <td>...</td>\n","      <td>0.012</td>\n","      <td>0.067</td>\n","      <td>0.022</td>\n","      <td>0.067</td>\n","      <td>-0.021</td>\n","      <td>0.067</td>\n","      <td>-0.077</td>\n","      <td>0.068</td>\n","      <td>0.080</td>\n","      <td>0.068</td>\n","    </tr>\n","    <tr>\n","      <th>58</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0.999</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40.419504</td>\n","      <td>1.139000e-04</td>\n","      <td>-1.139000e-04</td>\n","      <td>...</td>\n","      <td>0.051</td>\n","      <td>0.076</td>\n","      <td>0.057</td>\n","      <td>0.077</td>\n","      <td>-0.049</td>\n","      <td>0.071</td>\n","      <td>-0.021</td>\n","      <td>0.075</td>\n","      <td>0.053</td>\n","      <td>0.072</td>\n","    </tr>\n","    <tr>\n","      <th>62</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0.993</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.240661</td>\n","      <td>1.617000e-05</td>\n","      <td>-1.617000e-05</td>\n","      <td>...</td>\n","      <td>-0.490</td>\n","      <td>0.640</td>\n","      <td>0.710</td>\n","      <td>0.540</td>\n","      <td>0.080</td>\n","      <td>0.450</td>\n","      <td>-0.380</td>\n","      <td>0.560</td>\n","      <td>0.390</td>\n","      <td>0.560</td>\n","    </tr>\n","    <tr>\n","      <th>63</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0.871</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3.435916</td>\n","      <td>4.729000e-05</td>\n","      <td>-4.729000e-05</td>\n","      <td>...</td>\n","      <td>-0.050</td>\n","      <td>0.950</td>\n","      <td>0.050</td>\n","      <td>0.930</td>\n","      <td>-0.110</td>\n","      <td>0.660</td>\n","      <td>-0.300</td>\n","      <td>1.000</td>\n","      <td>0.300</td>\n","      <td>1.000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9538</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0.843</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.268182</td>\n","      <td>1.635000e-04</td>\n","      <td>-1.635000e-04</td>\n","      <td>...</td>\n","      <td>0.360</td>\n","      <td>0.380</td>\n","      <td>0.900</td>\n","      <td>1.000</td>\n","      <td>-1.500</td>\n","      <td>1.000</td>\n","      <td>-0.350</td>\n","      <td>0.340</td>\n","      <td>1.550</td>\n","      <td>0.920</td>\n","    </tr>\n","    <tr>\n","      <th>9542</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0.189</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>376.379890</td>\n","      <td>4.680000e-02</td>\n","      <td>-4.680000e-02</td>\n","      <td>...</td>\n","      <td>-0.500</td>\n","      <td>0.360</td>\n","      <td>1.370</td>\n","      <td>0.360</td>\n","      <td>1.120</td>\n","      <td>0.360</td>\n","      <td>-0.770</td>\n","      <td>0.360</td>\n","      <td>1.360</td>\n","      <td>0.360</td>\n","    </tr>\n","    <tr>\n","      <th>9552</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0.519</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>367.947848</td>\n","      <td>4.787000e-03</td>\n","      <td>-4.787000e-03</td>\n","      <td>...</td>\n","      <td>-0.010</td>\n","      <td>0.360</td>\n","      <td>0.210</td>\n","      <td>0.490</td>\n","      <td>0.070</td>\n","      <td>0.290</td>\n","      <td>-0.310</td>\n","      <td>0.490</td>\n","      <td>0.320</td>\n","      <td>0.480</td>\n","    </tr>\n","    <tr>\n","      <th>9560</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0.497</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.739849</td>\n","      <td>1.780000e-05</td>\n","      <td>-1.780000e-05</td>\n","      <td>...</td>\n","      <td>-0.250</td>\n","      <td>0.490</td>\n","      <td>0.780</td>\n","      <td>0.460</td>\n","      <td>0.500</td>\n","      <td>0.400</td>\n","      <td>-0.180</td>\n","      <td>0.470</td>\n","      <td>0.530</td>\n","      <td>0.470</td>\n","    </tr>\n","    <tr>\n","      <th>9562</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0.092</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>333.486169</td>\n","      <td>4.235000e-03</td>\n","      <td>-4.235000e-03</td>\n","      <td>...</td>\n","      <td>1.320</td>\n","      <td>0.670</td>\n","      <td>1.690</td>\n","      <td>0.530</td>\n","      <td>1.450</td>\n","      <td>0.110</td>\n","      <td>1.370</td>\n","      <td>0.660</td>\n","      <td>2.000</td>\n","      <td>0.460</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2057 rows Ã— 119 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bdd7ecb6-8479-4855-9269-68ccecf29714')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bdd7ecb6-8479-4855-9269-68ccecf29714 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bdd7ecb6-8479-4855-9269-68ccecf29714');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["#Now we want to standerize the data\n","from sklearn.preprocessing import StandardScaler\n","\n","df_standarized = df_multi.copy()\n","std_scaler = StandardScaler()\n","\n","#need to exclude the `koi_disposition` column from being standardized\n","\n","df_standarized.iloc[:, 5:] = std_scaler.fit_transform(df_standarized.iloc[:, 5:])\n","df_standarized.values"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o8Wf0LOl7W-n","executionInfo":{"status":"ok","timestamp":1661517402934,"user_tz":240,"elapsed":48,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}},"outputId":"729832d4-25ea-41a1-b52d-04d8ce2a0fa0"},"execution_count":69,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1.        ,  0.        ,  0.        , ..., -0.42979998,\n","        -0.47298245, -0.45094755],\n","       [ 1.        ,  0.        ,  0.        , ...,  0.57022923,\n","        -0.4114984 ,  0.00358378],\n","       [ 2.        ,  0.        ,  0.        , ..., -0.60123356,\n","        -0.57306482, -0.58573959],\n","       ...,\n","       [ 0.        ,  0.        ,  0.        , ..., -0.269081  ,\n","         1.18025533, -0.35690658],\n","       [ 2.        ,  0.        ,  0.        , ...,  0.44522558,\n","         0.10086868,  0.01925727],\n","       [ 0.        ,  0.        ,  0.        , ...,  1.23096282,\n","         0.61323576,  1.02236088]])"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["#Step5: Making the Model\n","class KeplerDataset(Dataset):\n","    def __init__(self, test=False):\n","        self.dataframe_orig = dfc = pd.read_csv(dataset_path, skiprows = 144)\n","\n","        if (test == False):\n","            self.data = df_standarized[( df_standarized.koi_disposition == 1 ) | ( df_standarized.koi_disposition == 0 )].values\n","        else:\n","            self.data = df_standarized[~(( df_standarized.koi_disposition == 1 ) | ( df_standarized.koi_disposition == 0 ))].values\n","            \n","        self.X_data = torch.FloatTensor(self.data[:, 1:])\n","        self.y_data = torch.FloatTensor(self.data[:, 0])\n","    \n","    def __len__(self):\n","        return len(self.data)\n","    \n","    def __getitem__(self, index):\n","        return self.X_data[index], self.y_data[index]\n","    \n","    def get_col_len(self):\n","        return self.X_data.shape[1]\n","    \n","kepler_df = KeplerDataset()\n","feature, target = kepler_df[1]\n","target, feature"],"metadata":{"id":"f6TZdXLM9WfJ","executionInfo":{"status":"ok","timestamp":1661517402936,"user_tz":240,"elapsed":45,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"9c75a30b-f82e-4d7c-f4b4-470cbbf6b584"},"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(tensor(1.),\n"," tensor([ 0.0000,  0.0000,  0.0000,  0.0000, -0.0159, -0.2233,  0.2233, -0.0540,\n","         -0.2624,  0.2624,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,\n","         -0.0369, -0.1964, -0.1033, -0.1723, -0.3160,  0.3160,  0.0000,  0.0000,\n","          0.0000, -0.2725, -0.0204,  0.0204, -0.0755, -0.1847,  0.0784, -0.1102,\n","         -0.2019,  0.0883, -0.0319, -0.0434,  0.0270,  0.1039,  0.0000,  0.0000,\n","          0.4714,  0.0000,  0.0000, -0.6949, -0.0478, -0.0669,  0.0450,  0.0049,\n","          0.0201, -0.0201,  0.0000,  0.0000, -0.1960,  0.5245, -0.2049, -0.2257,\n","         -0.2867,  0.6798, -0.5958,  1.1571, -0.7089,  0.0000,  0.0000, -0.0263,\n","         -1.0192,  0.9215,  0.3459, -0.3847,  0.4517,  0.9353, -0.7896,  0.9435,\n","         -0.1223, -0.2629,  0.1486, -0.1669, -0.7372,  0.4858,  0.0000,  0.0000,\n","          0.0000, -0.0263,  1.2029,  0.7781,  0.6293,  0.7322,  0.5787,  0.5268,\n","          0.7738,  0.8192,  0.8014, -0.5396,  0.2337,  0.1601,  0.6366,  0.0225,\n","         -0.0166,  0.0745,  0.0693,  0.0112,  0.0135, -0.0221, -0.0045, -0.0231,\n","          0.1723, -0.0787,  0.0171,  0.1097, -0.4643, -0.1559,  0.2220, -0.1013,\n","          0.0776,  0.5702, -0.4115,  0.0036]))"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["kepler_df.get_col_len()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yeN9Dkxx9Wma","executionInfo":{"status":"ok","timestamp":1661517402937,"user_tz":240,"elapsed":41,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}},"outputId":"2feedb7c-420e-4451-d470-af1de8965b45"},"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["116"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["#Step6: splitting the data\n","torch.manual_seed(42)\n","split_ratio = .7 # 70 / 30 split\n","batch_size = 32\n","n_epochs = 1000\n","\n","train_size = int(len(kepler_df) * split_ratio)\n","val_size = len(kepler_df) - train_size\n","train_ds, val_ds = random_split(kepler_df, [train_size, val_size])\n","\n","len(train_ds), len(val_ds)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kxZQ7u0J-aho","executionInfo":{"status":"ok","timestamp":1661517402939,"user_tz":240,"elapsed":37,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}},"outputId":"14091379-4a5a-4ef2-ba32-7cd55a86912e"},"execution_count":72,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5254, 2252)"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["train_loader = DataLoader(train_ds, batch_size, shuffle=True, num_workers=4, pin_memory=True)\n","val_loader = DataLoader(val_ds, batch_size, num_workers=4, pin_memory=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hT7YX8zC-b_7","executionInfo":{"status":"ok","timestamp":1661517402941,"user_tz":240,"elapsed":36,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}},"outputId":"185217d2-7f1b-40bd-ddb6-acf8796c6bde"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataloader.py:566: UserWarning: This DataLoader will create 4 worker processes in total. Our suggested max number of worker in current system is 2, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.\n","  cpuset_checked))\n"]}]},{"cell_type":"code","source":["for features, target in train_loader:\n","    print(features.size(), target.size())\n","    break"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rvrCd6-4-d74","executionInfo":{"status":"ok","timestamp":1661517402943,"user_tz":240,"elapsed":34,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}},"outputId":"1a679fbb-c7d3-4252-9e3a-476fe27a1770"},"execution_count":74,"outputs":[{"output_type":"stream","name":"stdout","text":["torch.Size([32, 116]) torch.Size([32])\n"]}]},{"cell_type":"code","source":["class KOIClassifier(nn.Module):\n","    def __init__(self, input_dim, out_dim):\n","        super(KOIClassifier, self).__init__()\n","        self.linear1 = nn.Linear(input_dim, 32)    \n","        self.linear2 = nn.Linear(32, 32)\n","        self.linear3 = nn.Linear(32, 16)\n","        self.linear4 = nn.Linear(16, 8)\n","        self.linear5 = nn.Linear(8, out_dim)\n","        \n","        \n","        \n","    def forward(self, xb):\n","        out = self.linear1(xb)\n","        out = torch.sigmoid(out)\n","        out = self.linear2(out)\n","        out = torch.sigmoid(out)\n","        out = self.linear3(out)\n","        out = torch.sigmoid(out)\n","        out = self.linear4(out)\n","        out = torch.sigmoid(out)\n","        out = self.linear5(out)\n","        out = torch.sigmoid(out)\n","        return out\n","    \n","    \n","    def predict(self, x):\n","        pred = self.forward(x)\n","        return pred\n","        \n","    def print_params(self):\n","        for params in self.parameters():\n","            print(params)"],"metadata":{"id":"9cmfoDFU-gAM","executionInfo":{"status":"ok","timestamp":1661517402944,"user_tz":240,"elapsed":32,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}}},"execution_count":75,"outputs":[]},{"cell_type":"code","source":["input_dim = kepler_df.get_col_len()\n","out_dim = 1\n","model = KOIClassifier(input_dim, out_dim)"],"metadata":{"id":"BT0wYa2U-gQ-","executionInfo":{"status":"ok","timestamp":1661517402945,"user_tz":240,"elapsed":34,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}}},"execution_count":76,"outputs":[]},{"cell_type":"code","source":["#Step7: training the model\n","criterion = nn.BCELoss()\n","optim = torch.optim.SGD(model.parameters(), lr=0.01)\n","\n","def train_model():\n","    for X, y in train_loader:\n","        for epoch in range(n_epochs):\n","            optim.zero_grad()\n","            y_pred = model.forward(X).flatten()\n","            loss = criterion(y_pred, y)\n","            loss.backward()\n","            optim.step()\n","\n","train_model()"],"metadata":{"id":"xHZAetVp-qAm","executionInfo":{"status":"ok","timestamp":1661517540537,"user_tz":240,"elapsed":137624,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}}},"execution_count":77,"outputs":[]},{"cell_type":"code","source":["# testing the predictions\n","for X, y in train_loader:\n","    y_pred = model.forward(X)\n","    y_pred = y_pred > 0.5\n","    y_pred = torch.tensor(y_pred, dtype=torch.int32)\n","    print(y_pred)\n","    break"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VC9JnQPu-gTu","executionInfo":{"status":"ok","timestamp":1661517540667,"user_tz":240,"elapsed":158,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}},"outputId":"f9d8b755-ee57-4924-c253-61530379e57b"},"execution_count":78,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([[0],\n","        [0],\n","        [1],\n","        [0],\n","        [0],\n","        [0],\n","        [0],\n","        [0],\n","        [0],\n","        [0],\n","        [1],\n","        [0],\n","        [0],\n","        [0],\n","        [0],\n","        [0],\n","        [0],\n","        [1],\n","        [0],\n","        [0],\n","        [0],\n","        [1],\n","        [0],\n","        [0],\n","        [1],\n","        [1],\n","        [0],\n","        [0],\n","        [0],\n","        [0],\n","        [0],\n","        [0]], dtype=torch.int32)\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:5: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n","  \"\"\"\n"]}]},{"cell_type":"code","source":["#Step8: displaying evaluative metrics\n","from sklearn.metrics import confusion_matrix\n","def pred_confusion_matrix(model, loader):\n","    with torch.no_grad():\n","        all_preds = torch.tensor([])\n","        all_true = torch.tensor([])\n","        for X, y in loader:\n","            y_pred = model(X)\n","            y_pred = torch.tensor(y_pred > 0.5, dtype=torch.float32).flatten()\n","            all_preds = torch.cat([all_preds, y_pred])\n","\n","            all_true = torch.cat([all_true, y])\n","            \n","    \n","    return confusion_matrix(all_true.numpy(), all_preds.numpy())"],"metadata":{"id":"UCmTysq2-gWW","executionInfo":{"status":"ok","timestamp":1661517540668,"user_tz":240,"elapsed":6,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}}},"execution_count":79,"outputs":[]},{"cell_type":"code","source":["import seaborn as sns\n","%matplotlib inline\n","\n","cf_mat_train = pred_confusion_matrix(model, train_loader)\n","cf_mat_val = pred_confusion_matrix(model, val_loader)\n","fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(8, 3))\n","\n","ax1, ax2 = axes\n","sns.heatmap(cf_mat_train, fmt='g', annot=True, ax=ax1)\n","ax1.set_title('Training Data')\n","\n","sns.heatmap(cf_mat_val, fmt='g', annot=True, ax=ax2)\n","ax2.set_title('Validation Data')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":369},"id":"YdWu6QTN-gYx","executionInfo":{"status":"ok","timestamp":1661517542385,"user_tz":240,"elapsed":1722,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}},"outputId":"37cd7bab-d9db-4501-fb04-d7dbe55da733"},"execution_count":80,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:9: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n","  if __name__ == '__main__':\n","/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataloader.py:566: UserWarning: This DataLoader will create 4 worker processes in total. Our suggested max number of worker in current system is 2, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.\n","  cpuset_checked))\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:9: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n","  if __name__ == '__main__':\n"]},{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Validation Data')"]},"metadata":{},"execution_count":80},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x216 with 4 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["save = {'model_state': model.state_dict(), 'optimizer_state': optim.state_dict()}\n","torch.save(save, 'checkpoint.pth')"],"metadata":{"id":"KSXLZUc6-gbd","executionInfo":{"status":"ok","timestamp":1661517542386,"user_tz":240,"elapsed":20,"user":{"displayName":"Mahdi Boulila","userId":"16956734695067479872"}}},"execution_count":81,"outputs":[]}]}